---

- name: Make an ansible directory for remembering what we previously run
  file: path=$auth_dir state=directory owner=root group=root
  tags: 
    - ldap
    - auth

- name: install ldap packages
  action: apt pkg=$item state=installed
  with_items:
    - slapd 
    - ldap-utils
    - ldapscripts 
  tags: 
    - ldap
    - auth

- name: Configure slapd
  dpkg_reconfigure: pkg=slapd answers='$FILE(files/dpkg-reconfigure/slapd)'

- name: Copy over the create users and group ldif 
  template: src=templates/tmp/create_users_and_groups.ldif.j2 dest=/tmp/create_users_and_groups.ldif owner=root group=root
  tags: 
    - ldap 
    - auth 

- name: Install users and groups 
  shell: ldapadd -w $ldapPassword -x -D cn=admin,$dc -f create_users_and_groups.ldif && touch $auth_create_user_and_groups_done chdir=/tmp creates=$auth_create_user_and_groups_done
  tags: 
    - ldap 
    - auth 


- name: Copy over the indexes ldif
  template: src=templates/tmp/create_indexes.ldif.j2 dest=/tmp/create_indexes.ldif owner=root group=root
  tags: 
    - ldap
    - auth

- name: Install indexes
  shell: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f create_indexes.ldif && touch $auth_create_indexes_done chdir=/tmp creates=$auth_create_indexes_done
  tags: 
    - ldap
    - auth

- name: Copy over the autofs ldif
  template: src=templates/tmp/create_autofs.ldif.j2 dest=/tmp/create_autofs.ldif owner=root group=root
  tags: 
    - ldap
    - auth

- name: Install autofs
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f create_autofs.ldif && touch $auth_create_autofs_done chdir=/tmp creates=$auth_create_autofs_done
  tags: 
    - ldap
    - auth

- name: Copy over the automount ldif
  template: src=templates/tmp/create_automount.ldif.j2 dest=/tmp/create_automount.ldif owner=root group=root
  tags: 
    - ldap
    - auth

- name: Install automount
  shell: ldapadd -w $ldapPassword -x -D cn=admin,$dc -f create_automount.ldif && touch $auth_create_automount_done chdir=/tmp creates=$auth_create_automount_done
  tags: 
    - ldap
    - auth

- name: Copy over the sudo ldif
  template: src=templates/tmp/create_sudo.ldif.j2 dest=/tmp/create_sudo.ldif owner=root group=root
  tags: 
    - ldap
    - auth

- name: Install sudo
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f create_sudo.ldif && touch $auth_create_sudo_done chdir=/tmp creates=$auth_create_sudo_done
  tags: 
    - ldap
    - auth

- name: Copy over the sudo master ldif
  template: src=templates/tmp/create_sudo_master.ldif.j2 dest=/tmp/create_sudo_master.ldif owner=root group=root
  tags:
    - ldap
    - auth

- name: Install sudo master
  shell: ldapadd -w $ldapPassword -x -D cn=admin,$dc -f create_sudo_master.ldif && touch $auth_create_sudo_master_done chdir=/tmp creates=$auth_create_sudo_master_done
  tags: 
    - ldap
    - auth

- name: ensure ldapscripts.conf exists
  template: src=templates/etc/ldapscripts/ldapscripts.conf.j2 dest=/etc/ldapscripts/ldapscripts.conf owner=root group=root
  tags: 
    - ldap
    - auth

- name: ensure ldap.secret exists
  template: src=templates/etc/ldap.secret.j2 dest=/etc/ldap.secret owner=root group=root mode=0400
  tags: 
    - ldap
    - auth

- name: ensure domainadmins exists
  template: src=templates/etc/sudoers.d/domainadmins dest=/etc/sudoers.d/domainadmins owner=root group=root mode=0440
  tags: 
    - ldap
    - auth

# This is really goofy but editing the secrets file in vims leaves an extra space at the end. Not sure what all editors do this
# If your editor does not do this then this command will mess up your file.
- name: ensure ldap.secret has no trailing space
  command: truncate --size $ldapPasswordSize /etc/ldap.secret
